const { ApplicationCommandOptionType, ModalBuilder, TextInputBuilder, ActionRowBuilder, TextInputStyle, MessageCollector, messageLink } = require("discord.js");
const { Player } = require("../../Models/players");

points = {
    "asia": [75, 50, 25],
    "silver_singapore": [125, 75, 50],
    "silver_eu": [125, 75, 50],
    "silver_india": [125, 75, 50],
    "silver_eu_2": [125, 75, 50],
    "gold": [500, 250, 125],
    "silver_us": [125, 75, 50],
    "america": [75, 50, 25],
    "global": [500, 250, 125],
    "platinum": [1500, 750, 375],
    "diamond": [3500, 1750, 875],
}

module.exports = {
    name: 'score-rankings',
    description: 'Rank shown based on score for current season',
    // devOnly: Boolean,
    //testOnly: true,
    // options: Object[],
    // deleted: Boolean,

    callback: async (client, interaction) => {

        const ps = await Player.find();
        res = []
        for (var i = 0; i < ps.length; i++) {
            score = 0
            p = ps[i]
            if (p.isArchived) continue;
            tours = Object.keys(p._doc)
            for (var j = 0; j < tours.length; j++) {
                val = p[tours[j]]
                if (Array.isArray(val) && val.length === 2) {
                    score += val[1][0]*points[tours[j]][0]
                    score += val[1][1]*points[tours[j]][1]
                    score += val[1][2]*points[tours[j]][2]
                }
            }
            if (score != 0) res.push([p.id, score])
        }
        res.sort((a, b) => b[1] - a[1]);

        

        to_print = ""
        for (var i = 0; i < res.length; i++) {
            to_print += `${res[i][1]} <:tp:1133501968116097076>\t\t<@${res[i][0]}>\n`
        }
        if (to_print == ""){
            await interaction.reply("Nothing!!")
            return;
        }

        const embed = new EmbedBuilder()
            .setTitle('SCORE SHEET')
            .addFields(
                { name: 'Score calculated with the TP gained by winners', value: to_print },
            )

        await interaction.reply({embeds: [embed]})

    }
};
